package com.company;

/**
 * Sum of the Even Fibonacci number below n
 * Second problem of ProjectEuler.net
 *
 * @author Kerem ERDEN
 */

/*
Problem 2
Even Fibonacci numbers
Each new term in the Fibonacci sequence is generated by adding the previous two terms.
By starting with 1 and 2, the first 10 terms will be:
1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
By considering the terms in the Fibonacci sequence whose values do not exceed
four million, find the sum of the even-valued terms.
*/

public class ProblemTwo{
    /**
     *Print sum on the screen
     */
    public static void main(String []args){
        System.out.println(sumOfEvenFibonnaci(4000000));
    }

    /**
     * sum of even fibonnaci numbers in a fibonnaci series limited by given integer
     * @param n //limit of fibonnaci series
     *
     * @return an integer number which represent sum of even fibonnaci numbers
     */

    public static int sumOfEvenFibonnaci(int n){
        int firstNumber = 1;
        int secondNumber = 2;
        int sumOfEvens = 2; //because second number is already a even number in a fibonnaci series
        if(n == 0 || n == 1 ){
            return 0;
        }

        while(secondNumber <= n){
            int nextNumber = firstNumber + secondNumber;
            firstNumber = secondNumber;
            secondNumber = nextNumber;
            if(secondNumber % 2 == 0){
                sumOfEvens += secondNumber;
            }
        }
        return sumOfEvens;
    }

}